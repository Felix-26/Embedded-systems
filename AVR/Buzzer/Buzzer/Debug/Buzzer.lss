
Buzzer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000160  00800100  00000474  000004e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000474  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000648  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000678  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000006b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000085d  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000715  00000000  00000000  00000f45  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000335  00000000  00000000  0000165a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001990  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c4  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000162  00000000  00000000  00001d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00001efa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e7       	ldi	r30, 0x74	; 116
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 36       	cpi	r26, 0x60	; 96
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  8e:	0c 94 38 02 	jmp	0x470	; 0x470 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <tone>:
#define NOTE_C8  4186
#define NOTE_CS8 4435
#define NOTE_D8  4699
#define NOTE_DS8 4978

void tone(uint16_t freq) {
  96:	9c 01       	movw	r18, r24
	DDRB |= (1<<DDB5);
  98:	84 b1       	in	r24, 0x04	; 4
  9a:	80 62       	ori	r24, 0x20	; 32
  9c:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1<<PORTB5);
  9e:	85 b1       	in	r24, 0x05	; 5
  a0:	80 62       	ori	r24, 0x20	; 32
  a2:	85 b9       	out	0x05, r24	; 5
	TCCR0A |= (1<<WGM01);
  a4:	84 b5       	in	r24, 0x24	; 36
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (1<<COM0A0);
  aa:	84 b5       	in	r24, 0x24	; 36
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS01);
  b0:	85 b5       	in	r24, 0x25	; 37
  b2:	82 60       	ori	r24, 0x02	; 2
  b4:	85 bd       	out	0x25, r24	; 37
	OCR0A = (F_CPU/(2UL*8*freq))-1;
  b6:	c9 01       	movw	r24, r18
  b8:	a0 e0       	ldi	r26, 0x00	; 0
  ba:	b0 e0       	ldi	r27, 0x00	; 0
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	aa 1f       	adc	r26, r26
  c2:	bb 1f       	adc	r27, r27
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	aa 1f       	adc	r26, r26
  ca:	bb 1f       	adc	r27, r27
  cc:	9c 01       	movw	r18, r24
  ce:	ad 01       	movw	r20, r26
  d0:	22 0f       	add	r18, r18
  d2:	33 1f       	adc	r19, r19
  d4:	44 1f       	adc	r20, r20
  d6:	55 1f       	adc	r21, r21
  d8:	22 0f       	add	r18, r18
  da:	33 1f       	adc	r19, r19
  dc:	44 1f       	adc	r20, r20
  de:	55 1f       	adc	r21, r21
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	74 e2       	ldi	r23, 0x24	; 36
  e4:	84 ef       	ldi	r24, 0xF4	; 244
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 16 02 	call	0x42c	; 0x42c <__udivmodsi4>
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	27 bd       	out	0x27, r18	; 39
  f0:	08 95       	ret

000000f2 <noTone>:
} 

void noTone() {
	TCCR0A = 0;
  f2:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0;
  f4:	15 bc       	out	0x25, r1	; 37
	PORTB &= ~(1<<PORTB5);
  f6:	85 b1       	in	r24, 0x05	; 5
  f8:	8f 7d       	andi	r24, 0xDF	; 223
  fa:	85 b9       	out	0x05, r24	; 5
  fc:	08 95       	ret

000000fe <main>:
};

int main(void)
{
	int note;
	for (int i=0;i<(sizeof(noteDuration)/sizeof(noteDuration[0]));i++)
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	16 c0       	rjmp	.+44     	; 0x130 <main+0x32>
	{
		noteDuration[i]=noteDuration[i]*10;
 104:	f9 01       	movw	r30, r18
 106:	ee 0f       	add	r30, r30
 108:	ff 1f       	adc	r31, r31
 10a:	e0 50       	subi	r30, 0x00	; 0
 10c:	ff 4f       	sbci	r31, 0xFF	; 255
 10e:	80 81       	ld	r24, Z
 110:	91 81       	ldd	r25, Z+1	; 0x01
 112:	ac 01       	movw	r20, r24
 114:	44 0f       	add	r20, r20
 116:	55 1f       	adc	r21, r21
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	84 0f       	add	r24, r20
 126:	95 1f       	adc	r25, r21
 128:	91 83       	std	Z+1, r25	; 0x01
 12a:	80 83       	st	Z, r24
};

int main(void)
{
	int note;
	for (int i=0;i<(sizeof(noteDuration)/sizeof(noteDuration[0]));i++)
 12c:	2f 5f       	subi	r18, 0xFF	; 255
 12e:	3f 4f       	sbci	r19, 0xFF	; 255
 130:	28 35       	cpi	r18, 0x58	; 88
 132:	31 05       	cpc	r19, r1
 134:	38 f3       	brcs	.-50     	; 0x104 <main+0x6>
 136:	e1 2c       	mov	r14, r1
 138:	f1 2c       	mov	r15, r1
 13a:	4e c0       	rjmp	.+156    	; 0x1d8 <main+0xda>
	{
		noteDuration[i]=noteDuration[i]*10;
	}
    
	for(int i=0;i<sizeof(noteDuration)/sizeof(noteDuration[0]);i++) {
		note = melody[i];
 13c:	97 01       	movw	r18, r14
 13e:	22 0f       	add	r18, r18
 140:	33 1f       	adc	r19, r19
 142:	f9 01       	movw	r30, r18
 144:	e0 55       	subi	r30, 0x50	; 80
 146:	fe 4f       	sbci	r31, 0xFE	; 254
 148:	80 81       	ld	r24, Z
 14a:	91 81       	ldd	r25, Z+1	; 0x01
		int duration = noteDuration[i];
 14c:	f9 01       	movw	r30, r18
 14e:	e0 50       	subi	r30, 0x00	; 0
 150:	ff 4f       	sbci	r31, 0xFF	; 255
 152:	00 81       	ld	r16, Z
 154:	11 81       	ldd	r17, Z+1	; 0x01
		
		if(note==0) {
 156:	00 97       	sbiw	r24, 0x00	; 0
 158:	29 f4       	brne	.+10     	; 0x164 <main+0x66>
			noTone();
 15a:	0e 94 79 00 	call	0xf2	; 0xf2 <noTone>
};

int main(void)
{
	int note;
	for (int i=0;i<(sizeof(noteDuration)/sizeof(noteDuration[0]));i++)
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0a c0       	rjmp	.+20     	; 0x178 <main+0x7a>
		int duration = noteDuration[i];
		
		if(note==0) {
			noTone();
			} else {
			tone(note);
 164:	0e 94 4b 00 	call	0x96	; 0x96 <tone>
 168:	fa cf       	rjmp	.-12     	; 0x15e <main+0x60>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16a:	ef e9       	ldi	r30, 0x9F	; 159
 16c:	ff e0       	ldi	r31, 0x0F	; 15
 16e:	31 97       	sbiw	r30, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <main+0x70>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0x76>
 174:	00 00       	nop
		}
		for (int j=0;j<duration;j++)
 176:	01 96       	adiw	r24, 0x01	; 1
 178:	80 17       	cp	r24, r16
 17a:	91 07       	cpc	r25, r17
 17c:	b4 f3       	brlt	.-20     	; 0x16a <main+0x6c>
		{
			_delay_ms(1);
		}
		noTone();
 17e:	0e 94 79 00 	call	0xf2	; 0xf2 <noTone>
		for (int j=0;j<0.3*duration;j++)
 182:	c0 e0       	ldi	r28, 0x00	; 0
 184:	d0 e0       	ldi	r29, 0x00	; 0
 186:	07 c0       	rjmp	.+14     	; 0x196 <main+0x98>
 188:	8f e9       	ldi	r24, 0x9F	; 159
 18a:	9f e0       	ldi	r25, 0x0F	; 15
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0x8e>
 190:	00 c0       	rjmp	.+0      	; 0x192 <main+0x94>
 192:	00 00       	nop
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	be 01       	movw	r22, r28
 198:	0d 2e       	mov	r0, r29
 19a:	00 0c       	add	r0, r0
 19c:	88 0b       	sbc	r24, r24
 19e:	99 0b       	sbc	r25, r25
 1a0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__floatsisf>
 1a4:	4b 01       	movw	r8, r22
 1a6:	5c 01       	movw	r10, r24
 1a8:	b8 01       	movw	r22, r16
 1aa:	01 2e       	mov	r0, r17
 1ac:	00 0c       	add	r0, r0
 1ae:	88 0b       	sbc	r24, r24
 1b0:	99 0b       	sbc	r25, r25
 1b2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__floatsisf>
 1b6:	2a e9       	ldi	r18, 0x9A	; 154
 1b8:	39 e9       	ldi	r19, 0x99	; 153
 1ba:	49 e9       	ldi	r20, 0x99	; 153
 1bc:	5e e3       	ldi	r21, 0x3E	; 62
 1be:	0e 94 58 01 	call	0x2b0	; 0x2b0 <__mulsf3>
 1c2:	9b 01       	movw	r18, r22
 1c4:	ac 01       	movw	r20, r24
 1c6:	c5 01       	movw	r24, r10
 1c8:	b4 01       	movw	r22, r8
 1ca:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <__cmpsf2>
 1ce:	88 23       	and	r24, r24
 1d0:	dc f2       	brlt	.-74     	; 0x188 <main+0x8a>
	for (int i=0;i<(sizeof(noteDuration)/sizeof(noteDuration[0]));i++)
	{
		noteDuration[i]=noteDuration[i]*10;
	}
    
	for(int i=0;i<sizeof(noteDuration)/sizeof(noteDuration[0]);i++) {
 1d2:	9f ef       	ldi	r25, 0xFF	; 255
 1d4:	e9 1a       	sub	r14, r25
 1d6:	f9 0a       	sbc	r15, r25
 1d8:	e8 e5       	ldi	r30, 0x58	; 88
 1da:	ee 16       	cp	r14, r30
 1dc:	f1 04       	cpc	r15, r1
 1de:	08 f4       	brcc	.+2      	; 0x1e2 <main+0xe4>
 1e0:	ad cf       	rjmp	.-166    	; 0x13c <main+0x3e>
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <main+0xe4>

000001e4 <__cmpsf2>:
 1e4:	0e 94 34 01 	call	0x268	; 0x268 <__fp_cmp>
 1e8:	08 f4       	brcc	.+2      	; 0x1ec <__cmpsf2+0x8>
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	08 95       	ret

000001ee <__floatunsisf>:
 1ee:	e8 94       	clt
 1f0:	09 c0       	rjmp	.+18     	; 0x204 <__floatsisf+0x12>

000001f2 <__floatsisf>:
 1f2:	97 fb       	bst	r25, 7
 1f4:	3e f4       	brtc	.+14     	; 0x204 <__floatsisf+0x12>
 1f6:	90 95       	com	r25
 1f8:	80 95       	com	r24
 1fa:	70 95       	com	r23
 1fc:	61 95       	neg	r22
 1fe:	7f 4f       	sbci	r23, 0xFF	; 255
 200:	8f 4f       	sbci	r24, 0xFF	; 255
 202:	9f 4f       	sbci	r25, 0xFF	; 255
 204:	99 23       	and	r25, r25
 206:	a9 f0       	breq	.+42     	; 0x232 <__floatsisf+0x40>
 208:	f9 2f       	mov	r31, r25
 20a:	96 e9       	ldi	r25, 0x96	; 150
 20c:	bb 27       	eor	r27, r27
 20e:	93 95       	inc	r25
 210:	f6 95       	lsr	r31
 212:	87 95       	ror	r24
 214:	77 95       	ror	r23
 216:	67 95       	ror	r22
 218:	b7 95       	ror	r27
 21a:	f1 11       	cpse	r31, r1
 21c:	f8 cf       	rjmp	.-16     	; 0x20e <__floatsisf+0x1c>
 21e:	fa f4       	brpl	.+62     	; 0x25e <__floatsisf+0x6c>
 220:	bb 0f       	add	r27, r27
 222:	11 f4       	brne	.+4      	; 0x228 <__floatsisf+0x36>
 224:	60 ff       	sbrs	r22, 0
 226:	1b c0       	rjmp	.+54     	; 0x25e <__floatsisf+0x6c>
 228:	6f 5f       	subi	r22, 0xFF	; 255
 22a:	7f 4f       	sbci	r23, 0xFF	; 255
 22c:	8f 4f       	sbci	r24, 0xFF	; 255
 22e:	9f 4f       	sbci	r25, 0xFF	; 255
 230:	16 c0       	rjmp	.+44     	; 0x25e <__floatsisf+0x6c>
 232:	88 23       	and	r24, r24
 234:	11 f0       	breq	.+4      	; 0x23a <__floatsisf+0x48>
 236:	96 e9       	ldi	r25, 0x96	; 150
 238:	11 c0       	rjmp	.+34     	; 0x25c <__floatsisf+0x6a>
 23a:	77 23       	and	r23, r23
 23c:	21 f0       	breq	.+8      	; 0x246 <__floatsisf+0x54>
 23e:	9e e8       	ldi	r25, 0x8E	; 142
 240:	87 2f       	mov	r24, r23
 242:	76 2f       	mov	r23, r22
 244:	05 c0       	rjmp	.+10     	; 0x250 <__floatsisf+0x5e>
 246:	66 23       	and	r22, r22
 248:	71 f0       	breq	.+28     	; 0x266 <__floatsisf+0x74>
 24a:	96 e8       	ldi	r25, 0x86	; 134
 24c:	86 2f       	mov	r24, r22
 24e:	70 e0       	ldi	r23, 0x00	; 0
 250:	60 e0       	ldi	r22, 0x00	; 0
 252:	2a f0       	brmi	.+10     	; 0x25e <__floatsisf+0x6c>
 254:	9a 95       	dec	r25
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	88 1f       	adc	r24, r24
 25c:	da f7       	brpl	.-10     	; 0x254 <__floatsisf+0x62>
 25e:	88 0f       	add	r24, r24
 260:	96 95       	lsr	r25
 262:	87 95       	ror	r24
 264:	97 f9       	bld	r25, 7
 266:	08 95       	ret

00000268 <__fp_cmp>:
 268:	99 0f       	add	r25, r25
 26a:	00 08       	sbc	r0, r0
 26c:	55 0f       	add	r21, r21
 26e:	aa 0b       	sbc	r26, r26
 270:	e0 e8       	ldi	r30, 0x80	; 128
 272:	fe ef       	ldi	r31, 0xFE	; 254
 274:	16 16       	cp	r1, r22
 276:	17 06       	cpc	r1, r23
 278:	e8 07       	cpc	r30, r24
 27a:	f9 07       	cpc	r31, r25
 27c:	c0 f0       	brcs	.+48     	; 0x2ae <__fp_cmp+0x46>
 27e:	12 16       	cp	r1, r18
 280:	13 06       	cpc	r1, r19
 282:	e4 07       	cpc	r30, r20
 284:	f5 07       	cpc	r31, r21
 286:	98 f0       	brcs	.+38     	; 0x2ae <__fp_cmp+0x46>
 288:	62 1b       	sub	r22, r18
 28a:	73 0b       	sbc	r23, r19
 28c:	84 0b       	sbc	r24, r20
 28e:	95 0b       	sbc	r25, r21
 290:	39 f4       	brne	.+14     	; 0x2a0 <__fp_cmp+0x38>
 292:	0a 26       	eor	r0, r26
 294:	61 f0       	breq	.+24     	; 0x2ae <__fp_cmp+0x46>
 296:	23 2b       	or	r18, r19
 298:	24 2b       	or	r18, r20
 29a:	25 2b       	or	r18, r21
 29c:	21 f4       	brne	.+8      	; 0x2a6 <__fp_cmp+0x3e>
 29e:	08 95       	ret
 2a0:	0a 26       	eor	r0, r26
 2a2:	09 f4       	brne	.+2      	; 0x2a6 <__fp_cmp+0x3e>
 2a4:	a1 40       	sbci	r26, 0x01	; 1
 2a6:	a6 95       	lsr	r26
 2a8:	8f ef       	ldi	r24, 0xFF	; 255
 2aa:	81 1d       	adc	r24, r1
 2ac:	81 1d       	adc	r24, r1
 2ae:	08 95       	ret

000002b0 <__mulsf3>:
 2b0:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__mulsf3x>
 2b4:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__fp_round>
 2b8:	0e 94 ce 01 	call	0x39c	; 0x39c <__fp_pscA>
 2bc:	38 f0       	brcs	.+14     	; 0x2cc <__mulsf3+0x1c>
 2be:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__fp_pscB>
 2c2:	20 f0       	brcs	.+8      	; 0x2cc <__mulsf3+0x1c>
 2c4:	95 23       	and	r25, r21
 2c6:	11 f0       	breq	.+4      	; 0x2cc <__mulsf3+0x1c>
 2c8:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_inf>
 2cc:	0c 94 cb 01 	jmp	0x396	; 0x396 <__fp_nan>
 2d0:	11 24       	eor	r1, r1
 2d2:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_szero>

000002d6 <__mulsf3x>:
 2d6:	0e 94 ed 01 	call	0x3da	; 0x3da <__fp_split3>
 2da:	70 f3       	brcs	.-36     	; 0x2b8 <__mulsf3+0x8>

000002dc <__mulsf3_pse>:
 2dc:	95 9f       	mul	r25, r21
 2de:	c1 f3       	breq	.-16     	; 0x2d0 <__mulsf3+0x20>
 2e0:	95 0f       	add	r25, r21
 2e2:	50 e0       	ldi	r21, 0x00	; 0
 2e4:	55 1f       	adc	r21, r21
 2e6:	62 9f       	mul	r22, r18
 2e8:	f0 01       	movw	r30, r0
 2ea:	72 9f       	mul	r23, r18
 2ec:	bb 27       	eor	r27, r27
 2ee:	f0 0d       	add	r31, r0
 2f0:	b1 1d       	adc	r27, r1
 2f2:	63 9f       	mul	r22, r19
 2f4:	aa 27       	eor	r26, r26
 2f6:	f0 0d       	add	r31, r0
 2f8:	b1 1d       	adc	r27, r1
 2fa:	aa 1f       	adc	r26, r26
 2fc:	64 9f       	mul	r22, r20
 2fe:	66 27       	eor	r22, r22
 300:	b0 0d       	add	r27, r0
 302:	a1 1d       	adc	r26, r1
 304:	66 1f       	adc	r22, r22
 306:	82 9f       	mul	r24, r18
 308:	22 27       	eor	r18, r18
 30a:	b0 0d       	add	r27, r0
 30c:	a1 1d       	adc	r26, r1
 30e:	62 1f       	adc	r22, r18
 310:	73 9f       	mul	r23, r19
 312:	b0 0d       	add	r27, r0
 314:	a1 1d       	adc	r26, r1
 316:	62 1f       	adc	r22, r18
 318:	83 9f       	mul	r24, r19
 31a:	a0 0d       	add	r26, r0
 31c:	61 1d       	adc	r22, r1
 31e:	22 1f       	adc	r18, r18
 320:	74 9f       	mul	r23, r20
 322:	33 27       	eor	r19, r19
 324:	a0 0d       	add	r26, r0
 326:	61 1d       	adc	r22, r1
 328:	23 1f       	adc	r18, r19
 32a:	84 9f       	mul	r24, r20
 32c:	60 0d       	add	r22, r0
 32e:	21 1d       	adc	r18, r1
 330:	82 2f       	mov	r24, r18
 332:	76 2f       	mov	r23, r22
 334:	6a 2f       	mov	r22, r26
 336:	11 24       	eor	r1, r1
 338:	9f 57       	subi	r25, 0x7F	; 127
 33a:	50 40       	sbci	r21, 0x00	; 0
 33c:	9a f0       	brmi	.+38     	; 0x364 <__mulsf3_pse+0x88>
 33e:	f1 f0       	breq	.+60     	; 0x37c <__mulsf3_pse+0xa0>
 340:	88 23       	and	r24, r24
 342:	4a f0       	brmi	.+18     	; 0x356 <__mulsf3_pse+0x7a>
 344:	ee 0f       	add	r30, r30
 346:	ff 1f       	adc	r31, r31
 348:	bb 1f       	adc	r27, r27
 34a:	66 1f       	adc	r22, r22
 34c:	77 1f       	adc	r23, r23
 34e:	88 1f       	adc	r24, r24
 350:	91 50       	subi	r25, 0x01	; 1
 352:	50 40       	sbci	r21, 0x00	; 0
 354:	a9 f7       	brne	.-22     	; 0x340 <__mulsf3_pse+0x64>
 356:	9e 3f       	cpi	r25, 0xFE	; 254
 358:	51 05       	cpc	r21, r1
 35a:	80 f0       	brcs	.+32     	; 0x37c <__mulsf3_pse+0xa0>
 35c:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_inf>
 360:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_szero>
 364:	5f 3f       	cpi	r21, 0xFF	; 255
 366:	e4 f3       	brlt	.-8      	; 0x360 <__mulsf3_pse+0x84>
 368:	98 3e       	cpi	r25, 0xE8	; 232
 36a:	d4 f3       	brlt	.-12     	; 0x360 <__mulsf3_pse+0x84>
 36c:	86 95       	lsr	r24
 36e:	77 95       	ror	r23
 370:	67 95       	ror	r22
 372:	b7 95       	ror	r27
 374:	f7 95       	ror	r31
 376:	e7 95       	ror	r30
 378:	9f 5f       	subi	r25, 0xFF	; 255
 37a:	c1 f7       	brne	.-16     	; 0x36c <__mulsf3_pse+0x90>
 37c:	fe 2b       	or	r31, r30
 37e:	88 0f       	add	r24, r24
 380:	91 1d       	adc	r25, r1
 382:	96 95       	lsr	r25
 384:	87 95       	ror	r24
 386:	97 f9       	bld	r25, 7
 388:	08 95       	ret

0000038a <__fp_inf>:
 38a:	97 f9       	bld	r25, 7
 38c:	9f 67       	ori	r25, 0x7F	; 127
 38e:	80 e8       	ldi	r24, 0x80	; 128
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	60 e0       	ldi	r22, 0x00	; 0
 394:	08 95       	ret

00000396 <__fp_nan>:
 396:	9f ef       	ldi	r25, 0xFF	; 255
 398:	80 ec       	ldi	r24, 0xC0	; 192
 39a:	08 95       	ret

0000039c <__fp_pscA>:
 39c:	00 24       	eor	r0, r0
 39e:	0a 94       	dec	r0
 3a0:	16 16       	cp	r1, r22
 3a2:	17 06       	cpc	r1, r23
 3a4:	18 06       	cpc	r1, r24
 3a6:	09 06       	cpc	r0, r25
 3a8:	08 95       	ret

000003aa <__fp_pscB>:
 3aa:	00 24       	eor	r0, r0
 3ac:	0a 94       	dec	r0
 3ae:	12 16       	cp	r1, r18
 3b0:	13 06       	cpc	r1, r19
 3b2:	14 06       	cpc	r1, r20
 3b4:	05 06       	cpc	r0, r21
 3b6:	08 95       	ret

000003b8 <__fp_round>:
 3b8:	09 2e       	mov	r0, r25
 3ba:	03 94       	inc	r0
 3bc:	00 0c       	add	r0, r0
 3be:	11 f4       	brne	.+4      	; 0x3c4 <__fp_round+0xc>
 3c0:	88 23       	and	r24, r24
 3c2:	52 f0       	brmi	.+20     	; 0x3d8 <__fp_round+0x20>
 3c4:	bb 0f       	add	r27, r27
 3c6:	40 f4       	brcc	.+16     	; 0x3d8 <__fp_round+0x20>
 3c8:	bf 2b       	or	r27, r31
 3ca:	11 f4       	brne	.+4      	; 0x3d0 <__fp_round+0x18>
 3cc:	60 ff       	sbrs	r22, 0
 3ce:	04 c0       	rjmp	.+8      	; 0x3d8 <__fp_round+0x20>
 3d0:	6f 5f       	subi	r22, 0xFF	; 255
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	8f 4f       	sbci	r24, 0xFF	; 255
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret

000003da <__fp_split3>:
 3da:	57 fd       	sbrc	r21, 7
 3dc:	90 58       	subi	r25, 0x80	; 128
 3de:	44 0f       	add	r20, r20
 3e0:	55 1f       	adc	r21, r21
 3e2:	59 f0       	breq	.+22     	; 0x3fa <__fp_splitA+0x10>
 3e4:	5f 3f       	cpi	r21, 0xFF	; 255
 3e6:	71 f0       	breq	.+28     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3e8:	47 95       	ror	r20

000003ea <__fp_splitA>:
 3ea:	88 0f       	add	r24, r24
 3ec:	97 fb       	bst	r25, 7
 3ee:	99 1f       	adc	r25, r25
 3f0:	61 f0       	breq	.+24     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3f2:	9f 3f       	cpi	r25, 0xFF	; 255
 3f4:	79 f0       	breq	.+30     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3f6:	87 95       	ror	r24
 3f8:	08 95       	ret
 3fa:	12 16       	cp	r1, r18
 3fc:	13 06       	cpc	r1, r19
 3fe:	14 06       	cpc	r1, r20
 400:	55 1f       	adc	r21, r21
 402:	f2 cf       	rjmp	.-28     	; 0x3e8 <__fp_split3+0xe>
 404:	46 95       	lsr	r20
 406:	f1 df       	rcall	.-30     	; 0x3ea <__fp_splitA>
 408:	08 c0       	rjmp	.+16     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 40a:	16 16       	cp	r1, r22
 40c:	17 06       	cpc	r1, r23
 40e:	18 06       	cpc	r1, r24
 410:	99 1f       	adc	r25, r25
 412:	f1 cf       	rjmp	.-30     	; 0x3f6 <__fp_splitA+0xc>
 414:	86 95       	lsr	r24
 416:	71 05       	cpc	r23, r1
 418:	61 05       	cpc	r22, r1
 41a:	08 94       	sec
 41c:	08 95       	ret

0000041e <__fp_zero>:
 41e:	e8 94       	clt

00000420 <__fp_szero>:
 420:	bb 27       	eor	r27, r27
 422:	66 27       	eor	r22, r22
 424:	77 27       	eor	r23, r23
 426:	cb 01       	movw	r24, r22
 428:	97 f9       	bld	r25, 7
 42a:	08 95       	ret

0000042c <__udivmodsi4>:
 42c:	a1 e2       	ldi	r26, 0x21	; 33
 42e:	1a 2e       	mov	r1, r26
 430:	aa 1b       	sub	r26, r26
 432:	bb 1b       	sub	r27, r27
 434:	fd 01       	movw	r30, r26
 436:	0d c0       	rjmp	.+26     	; 0x452 <__udivmodsi4_ep>

00000438 <__udivmodsi4_loop>:
 438:	aa 1f       	adc	r26, r26
 43a:	bb 1f       	adc	r27, r27
 43c:	ee 1f       	adc	r30, r30
 43e:	ff 1f       	adc	r31, r31
 440:	a2 17       	cp	r26, r18
 442:	b3 07       	cpc	r27, r19
 444:	e4 07       	cpc	r30, r20
 446:	f5 07       	cpc	r31, r21
 448:	20 f0       	brcs	.+8      	; 0x452 <__udivmodsi4_ep>
 44a:	a2 1b       	sub	r26, r18
 44c:	b3 0b       	sbc	r27, r19
 44e:	e4 0b       	sbc	r30, r20
 450:	f5 0b       	sbc	r31, r21

00000452 <__udivmodsi4_ep>:
 452:	66 1f       	adc	r22, r22
 454:	77 1f       	adc	r23, r23
 456:	88 1f       	adc	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	1a 94       	dec	r1
 45c:	69 f7       	brne	.-38     	; 0x438 <__udivmodsi4_loop>
 45e:	60 95       	com	r22
 460:	70 95       	com	r23
 462:	80 95       	com	r24
 464:	90 95       	com	r25
 466:	9b 01       	movw	r18, r22
 468:	ac 01       	movw	r20, r24
 46a:	bd 01       	movw	r22, r26
 46c:	cf 01       	movw	r24, r30
 46e:	08 95       	ret

00000470 <_exit>:
 470:	f8 94       	cli

00000472 <__stop_program>:
 472:	ff cf       	rjmp	.-2      	; 0x472 <__stop_program>
